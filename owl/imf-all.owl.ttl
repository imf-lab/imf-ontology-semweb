@prefix imf: <http://ns.imfid.org/imf#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://ns.imfid.org/imf> a owl:Ontology ;
    owl:imports <http://ns.imfid.org/ontology/--prerelease--/imf-aspects>,
        <http://ns.imfid.org/ontology/--prerelease--/imf-metamodel>,
        <http://ns.imfid.org/ontology/--prerelease--/imf-top> ;
    owl:versionIRI <http://ns.imfid.org/ontology/--prerelease--/imf> ;
    skos:altLabel "IMF ontology" ;
    skos:prefLabel "Information Modelling Framework Ontology " ;
    skos:scopeNote """

      This is the main IMF ontology and its main point of entry.  This
      ontology document imports all other IMF ontology documents, each
      of which focus on one particular part of the ontology:

      1. IMF Top defines the very high-level classes and properties of
      the IMF ontology, such as AspectObject.

      2. IMF Metamodel defines the metamodel for aspect objects and
      their permissible properties.

      3. IMF Aspects defines the aspects that are available to aspect
      objects.

    """ .

imf:Connection a owl:Class ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:onClass imf:InletTerminal ;
            owl:onProperty imf:hasInletTerminal ;
            owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ],
        [ a owl:Restriction ;
            owl:onClass imf:OutletTerminal ;
            owl:onProperty imf:hasOutletTerminal ;
            owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ],
        imf:SystemBlock ;
    skos:altLabel "Junction",
        "Transport" ;
    skos:definition """

     A simple type of system block that has exactly one input and one
     output. No transformation of the input is performed.

     The connection, in effect, merges the two connected
     terminals. The connection itself has no function or spatial
     significance.

  """ ;
    skos:prefLabel "Connection" .

imf:directlyPrecedes a owl:ObjectProperty ;
    rdfs:domain imf:InletTerminal ;
    rdfs:range imf:OutletTerminal ;
    rdfs:subPropertyOf imf:precedes ;
    skos:definition """

    An immediate, non-transitive, precedes relation between inlet
    terminals and outlet terminals *of the same system* such that
    (parts of) the input to the inlet terminal is processed by the
    system to produce (parts of) the output of the outlet terminal.

  """ ;
    skos:prefLabel "directly precedes" .

imf:hasActivity a owl:ObjectProperty ;
    rdfs:domain imf:FunctionAspectObject ;
    rdfs:range imf:ActivityAspectObject ;
    rdfs:subPropertyOf imf:interAspectRelation .

imf:hasChild a owl:ObjectProperty ;
    rdfs:subPropertyOf imf:hierarchicalRelation,
        imf:intraAspectRelation,
        skos:narrower ;
    owl:inverseOf imf:hasParent ;
    skos:altLabel "has part" ;
    skos:prefLabel "has child" .

imf:isConnectedTo a owl:ObjectProperty ;
    rdfs:domain imf:OutletTerminal ;
    rdfs:range imf:InletTerminal ;
    rdfs:subPropertyOf imf:associativeRelation,
        imf:intraAspectRelation,
        imf:precedes ;
    skos:definition """

    The relation between to terminals that are connected. The output
    of the outlet terminal is given as input to the inlet terminal.

  """ ;
    skos:prefLabel "is connected to" .

imf:isFulfilledBy a owl:ObjectProperty ;
    rdfs:domain imf:FunctionAspectObject ;
    rdfs:range imf:ProductAspectObject ;
    rdfs:subPropertyOf imf:interAspectRelation .

<http://ns.imfid.org/imf-aspects> a owl:Ontology ;
    owl:imports <http://ns.imfid.org/ontology/--prerelease--/imf-top> ;
    owl:versionIRI <http://ns.imfid.org/ontology/--prerelease--/imf-aspects> ;
    skos:altLabel "IMF aspects ontology" ;
    skos:prefLabel "Information Modelling Framework Ontology: Aspects Ontology " ;
    skos:scopeNote """

      This ontology defines IMF's central aspects.

    """ .

<http://ns.imfid.org/imf-metamodel> a owl:Ontology ;
    owl:imports <http://ns.imfid.org/ontology/--prerelease--/imf-top> ;
    owl:versionIRI <http://ns.imfid.org/ontology/--prerelease--/imf-metamodel> ;
    skos:altLabel "IMF metamodel ontology" ;
    skos:prefLabel "Information Modelling Framework Ontology: Metamodel Ontology " ;
    skos:scopeNote """

      This ontology defines IMF's meta model which defines how
      IMF models are represented.

    """ .

<http://ns.imfid.org/imf-top> a owl:Ontology ;
    owl:imports <http://www.w3.org/2004/02/skos/core> ;
    owl:versionIRI <http://ns.imfid.org/ontology/--prerelease--/imf-top> ;
    skos:altLabel "IMF top ontology" ;
    skos:prefLabel "Information Modelling Framework Ontology: Top Ontology " ;
    skos:scopeNote """

      This ontology defines the very core classes and relations of the
      Information Modelling Framework (IMF) that provide a structure
      for ontologies that extend this ontology.

    """ .

imf:LocationAspectObject a owl:Class ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom imf:LocationAspectObject ;
            owl:onProperty imf:intraAspectRelation ],
        imf:AspectObject ;
    owl:equivalentClass [ a owl:Class,
                owl:Restriction ;
            owl:hasValue imf:LocationAspect ;
            owl:onProperty imf:hasAspect ] .

imf:hasInletTerminal a owl:ObjectProperty ;
    rdfs:range imf:InletTerminal ;
    rdfs:subPropertyOf imf:hasTerminal ;
    skos:definition "The relation between a system and its inlet terminals." ;
    skos:prefLabel "has inlet terminal" .

imf:hasOutletTerminal a owl:ObjectProperty ;
    rdfs:range imf:OutletTerminal ;
    rdfs:subPropertyOf imf:hasTerminal ;
    skos:definition "The relation between a system and its outlet terminals." ;
    skos:prefLabel "has outlet terminal" .

imf:isAspectOf a owl:ObjectProperty ;
    rdfs:domain imf:AspectObject ;
    rdfs:range imf:IntegratedObject ;
    skos:definition """

    Relates an aspect object to the integrated object the aspect
    object provides a specification for/description of.""" ;
    skos:prefLabel "is aspect of" .

imf:ActivityAspect a imf:Aspect ;
    imf:color "#000000" ;
    imf:prefix ">" .

imf:ActivityAspectObject a owl:Class ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom imf:ActivityAspectObject ;
            owl:onProperty imf:intraAspectRelation ],
        imf:AspectObject ;
    owl:equivalentClass [ a owl:Class,
                owl:Restriction ;
            owl:hasValue imf:ActivityAspect ;
            owl:onProperty imf:hasAspect ] .

imf:FunctionAspect a imf:Aspect ;
    imf:color "#FFFF00" ;
    imf:prefix "=" .

imf:LocationAspect a imf:Aspect ;
    imf:color "#FF00FF" ;
    imf:prefix "+" .

imf:ProductAspect a imf:Aspect ;
    imf:color "#00FFFF" ;
    imf:prefix "-" .

imf:ProductAspectObject a owl:Class ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom imf:ProductAspectObject ;
            owl:onProperty imf:intraAspectRelation ],
        imf:AspectObject ;
    owl:equivalentClass [ a owl:Class,
                owl:Restriction ;
            owl:hasValue imf:ProductAspect ;
            owl:onProperty imf:hasAspect ] .

imf:hasTerminal a owl:ObjectProperty ;
    rdfs:domain imf:SystemBlock ;
    rdfs:range imf:Terminal ;
    rdfs:subPropertyOf imf:associativeRelation,
        imf:intraAspectRelation ;
    skos:definition "The relation between a system and its terminals." ;
    skos:prefLabel "has terminal" .

imf:hierarchicalRelation a owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:domain imf:AspectObject ;
    rdfs:range imf:AspectObject ;
    rdfs:subPropertyOf skos:semanticRelation ;
    skos:definition "A generic hierachical relation that may be used to represent a breakdown structure." ;
    skos:prefLabel "hierarchical relation" ;
    skos:scopeNote """
    
      This relation is used to enforce that subproperties respect this
      relation's definition. This must be enforced by introducing
      class axioms that locally further restrict the domain and range
      of the relation.
      
    """ .

imf:interAspectRelation a owl:ObjectProperty ;
    rdfs:domain imf:AspectObject ;
    rdfs:range imf:AspectObject ;
    rdfs:subPropertyOf skos:related ;
    skos:definition """

      Relates aspects objects of different aspects.

    """ .

imf:precedes a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:domain imf:Terminal ;
    rdfs:range imf:Terminal ;
    rdfs:subPropertyOf imf:associativeRelation,
        imf:intraAspectRelation ;
    skos:definition """

    A relation between terminals that represents the "flow" of
    input/output between teminals, both terminals of the same system
    block (represented by the subproperty directlyPrecedes) and of
    different system blocks (represented by the subproperty
    isConnectedTo).

  """ ;
    skos:prefLabel "precedes" .

imf:FunctionAspectObject a owl:Class ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom imf:FunctionAspectObject ;
            owl:onProperty imf:intraAspectRelation ],
        imf:AspectObject ;
    owl:equivalentClass [ a owl:Class,
                owl:Restriction ;
            owl:hasValue imf:FunctionAspect ;
            owl:onProperty imf:hasAspect ] .

imf:IntegratedObject a owl:Class ;
    skos:editorialNote """

    [2022-01-19 Wed] Is it the case that an integrated object can only
    have one aspect of the same aspect? 

    """ ;
    skos:prefLabel "Integrated Object" ;
    skos:scopeNote """

    The primary use of the IMF ontology is to specify requirements for
    entities, where 'entity' is ment in a very generic sense; an
    entity may be abstract or concrete, a high-level system, a product
    class or an installed product. In the ontology these entities are
    called integrated objects.

    Following the IMF methodology, an intergrated object is not
    described directly, but through typically multiple aspects
    objects, see also imf:AspectObject.""" .

imf:associativeRelation a owl:ObjectProperty ;
    rdfs:domain imf:AspectObject ;
    rdfs:range imf:AspectObject ;
    rdfs:subPropertyOf skos:related ;
    owl:propertyDisjointWith imf:hierachicalRelation ;
    skos:definition "A generic associative relation." ;
    skos:prefLabel "associative relation" ;
    skos:scopeNote """
    
      This relation is used to enforce that subproperties respect this
      relation's definition. This must be enforced by introducing
      class axioms that locally further restrict the domain and range
      of the relation.
      
    """ .

imf:hasParent a owl:FunctionalProperty,
        owl:ObjectProperty ;
    rdfs:domain imf:AspectObject ;
    rdfs:range imf:AspectObject ;
    rdfs:subPropertyOf imf:hierarchicalRelation,
        imf:intraAspectRelation,
        skos:broader ;
    skos:altLabel "is part of" ;
    skos:definition """

    An aspect object is placed in a tree-shaped breakdown structure
    using hasParent/hasChild relationships. An aspect object may have
    a single parent (the root object has no parent) and possibly
    multiple children. This is an abstraction mechanism. The children
    of an aspect object provide a more detailed description of (parts
    of) its parent.

  """ ;
    skos:prefLabel "has parent" .

imf:SystemBlock a owl:Class ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom imf:SystemBlock ;
            owl:onProperty imf:hasParent ],
        imf:AspectObject ;
    skos:definition """

    A system is a processing (black) box. It processes the input to
    output, possibly changing the state of what is processed.

    Transforms the input from its inlet terminals to the output to its
    outlet terminals. The relation between the inlet and outlet
    terminals may be complex and may be further described by
    subsystems which are related by hasChild.

    A system may have multiple inlet and outlet terminals. A system
    with zero terminals is uncommon.

  """ ;
    skos:prefLabel "System Block" .

imf:hasAspect a owl:ObjectProperty ;
    rdfs:domain imf:AspectObject ;
    rdfs:range imf:Aspect ;
    skos:definition "Relates an aspect object to its aspect." ;
    skos:prefLabel "has aspect" .

imf:Aspect a owl:Class ;
    skos:example "Function, Location, Product are examples of aspects." ;
    skos:prefLabel "Aspect" ;
    skos:scopeNote """

    Each aspect is associated with a class of the aspect objects that
    have that aspect, e.g,. imf:FunctionAspectObject is the class of
    aspect objects with the aspect imf:FunctionAspect. These classes
    are used to specify permissible relationships between aspect
    objects according to their aspect.""" .

imf:InletTerminal a owl:Class ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom imf:InletTerminal ;
            owl:onProperty imf:hasParent ],
        imf:Terminal ;
    skos:definition """

    A terminal whose default function is to recieve input for its
    system.

  """ ;
    skos:prefLabel "Inlet Terminal" .

imf:OutletTerminal a owl:Class ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom imf:OutletTerminal ;
            owl:onProperty imf:hasParent ],
        imf:Terminal ;
    skos:definition """

    A terminal whose default function is to give output for its
    system.

  """ ;
    skos:prefLabel "Outlet Terminal" .

imf:Terminal a owl:Class ;
    rdfs:subClassOf imf:AspectObject ;
    owl:equivalentClass [ a owl:Class ;
            owl:unionOf ( imf:InletTerminal imf:OutletTerminal ) ] ;
    skos:altLabel "Port" ;
    skos:definition """

    A port or boundry point through which a system block can interact
    and communicate with the world outside the system, receiving input
    and giving output.

  """ ;
    skos:editorialNote """

     [2022-03-11 Fri] Need to represent the type of a terminal, and
     constraints on connections between typed terminals: material,
     information, energy, structural.

   """ ;
    skos:prefLabel "Terminal" .

imf:intraAspectRelation a owl:ObjectProperty ;
    rdfs:domain imf:AspectObject ;
    rdfs:range imf:AspectObject ;
    rdfs:subPropertyOf skos:semanticRelation ;
    skos:definition "A generic relation between aspect objects of the same aspect" ;
    skos:prefLabel "intra-aspect relation" ;
    skos:scopeNote """
    
      This relation is used to enforce that subproperties respect this
      relation's definition. This must be enforced by introducing
      class axioms that locally further restrict the domain and range
      of the relation.
      
    """ .

imf:AspectObject a owl:Class ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:onClass imf:Aspect ;
            owl:onProperty imf:hasAspect ;
            owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ],
        [ a owl:Restriction ;
            owl:onClass imf:IntegratedObject ;
            owl:onProperty imf:isAspectOf ;
            owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] ;
    owl:equivalentClass [ a owl:Class ;
            owl:unionOf ( imf:SystemBlock imf:Terminal ) ] ;
    skos:definition """

    Aspect object is the most central concept of the IMF ontology.

    An aspect object describes a specific type of feature (or aspect)
    of one (and exactly one) integrated object.

    An aspect object must have a single aspect, we say that the
    aspect object "is of" this aspect.  

    """ ;
    skos:prefLabel "Aspect Object" ;
    skos:scopeNote """

    Each aspect object is either a system block or a terminal.""" .

[] a owl:AllDisjointClasses ;
    owl:members ( imf:Aspect imf:AspectObject imf:IntegratedObject ) .

[] a owl:AllDisjointClasses ;
    owl:members ( imf:InletTerminal imf:OutletTerminal ) .

[] a owl:AllDisjointClasses ;
    owl:members ( imf:SystemBlock imf:Terminal ) .

[] a owl:AllDifferent ;
    owl:members ( imf:FunctionAspect imf:LocationAspect imf:ProductAspect imf:ActivityAspect ) .

