@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix imf: <http://ns.imfid.org/imf#> .
@prefix pav: <http://purl.org/pav/> .
@prefix o-rdf: <http://tpl.ottr.xyz/rdf/0.1/> .
@prefix o-owl-rstr: <http://tpl.ottr.xyz/owl/restriction/0.1/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix o-imf: <http://ns.imfid.org/templates/> .
@prefix ottr: <http://ns.ottr.xyz/0.4/> .
@prefix o-owl-ma: <http://tpl.ottr.xyz/owl/macro/0.1/> .
@prefix o-owl-ax: <http://tpl.ottr.xyz/owl/axiom/0.1/> .
@prefix shsh: <http://www.w3.org/ns/shacl-shacl#> .

imf:Aspect
    a owl:Class ;
    skos:example "Function, Location, Product are examples of aspects." ;
    skos:prefLabel "Aspect" .

imf:AspectObject
    a owl:Class ;
    rdfs:subClassOf [
        a owl:Restriction ;
        owl:onClass imf:Aspect ;
        owl:onProperty imf:hasAspect ;
        owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger
    ], [
        a owl:Restriction ;
        owl:onClass imf:IntegratedObject ;
        owl:onProperty imf:isAspectOf ;
        owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger
    ] ;
    skos:definition """

    An aspect object describes a specific type of feature (or aspect)
    of one (and exactly one) integrated object.""" ;
    skos:editorialNote """

  [2022-01-19 Wed] Is 'aspect object subtype' ok?

  [2022-01-20 Thu]: Add (RDL) types/attributes to the overview scopeNote?
  """ ;
    skos:prefLabel "Aspect Object" ;
    skos:scopeNote """

    Overview:

    Aspect object is the most central concept of the IMF ontology.

    The following is used to define an aspect object:
   
    1. an aspect object must have a single aspect, we say that the
    aspect object \"is of\" this aspect.  

    2. an aspect object has a more specific subtype, being either a
    system block, a stream or a terminal. These types determine how
    the aspect object can be connected to other aspect objects.

    3. an aspect object can be further described by breaking it down
    into its parts or children. An aspect object is placed in a
    tree-shaped breakdown structure where the aspect object may have a
    single parent (the root object has no parent) and possibly
    multiple children.

  """ .

imf:IntegratedObject
    a owl:Class ;
    skos:editorialNote """

    [2022-01-24 Mon] TODO: Verify the description in the scopeNote.

    [2022-01-19 Wed] Is it the case that an integrated object can only
    have one aspect of the same aspect? """ ;
    skos:prefLabel "Integrated Object" ;
    skos:scopeNote """

    The primary use of the IMF ontology is to specify requirements for
    entities, where 'entity' is ment in a very generic sense; an
    entity may be abstract or concrete, a high-level system, a product
    class or an installed product. In the ontology these entities are
    called integrated objects.

    Following the IMF methodology, an intergrated object is not
    described directly, but through typically multiple aspects
    objects, see also imf:AspectObject.""" .

imf:associativeRelation
    a owl:ObjectProperty ;
    rdfs:domain imf:AspectObject ;
    rdfs:range imf:AspectObject ;
    rdfs:subPropertyOf skos:related ;
    owl:propertyDisjointWith imf:hierachicalRelation ;
    skos:definition "A generic associative relation." ;
    skos:scopeNote """
    
      This relation is used to enforce that subproperties respect this
      relation's definition. This must be enforced by introducing
      class axioms that locally further restrict the domain and range
      of the relation.
      
    """ .

imf:hasAspect
    a owl:ObjectProperty ;
    rdfs:domain imf:AspectObject ;
    rdfs:range imf:Aspect ;
    skos:definition "Relates an aspect object to its aspect." ;
    skos:prefLabel "has aspect" .

imf:hierarchicalRelation
    a owl:IrreflexiveProperty, owl:ObjectProperty ;
    rdfs:domain imf:AspectObject ;
    rdfs:range imf:AspectObject ;
    rdfs:subPropertyOf skos:semanticRelation ;
    skos:definition "A generic hierachical relation that may be used to represent a breakdown structure." ;
    skos:scopeNote """
    
      This relation is used to enforce that subproperties respect this
      relation's definition. This must be enforced by introducing
      class axioms that locally further restrict the domain and range
      of the relation.
      
    """ .

imf:intraAspectRelation
    a owl:ObjectProperty ;
    rdfs:domain imf:AspectObject ;
    rdfs:range imf:AspectObject ;
    rdfs:subPropertyOf skos:semanticRelation ;
    skos:definition "A generic relation between aspect objects of the same aspect" ;
    skos:scopeNote """
    
      This relation is used to enforce that subproperties respect this
      relation's definition. This must be enforced by introducing
      class axioms that locally further restrict the domain and range
      of the relation.
      
    """ .

imf:isAspectOf
    a owl:ObjectProperty ;
    rdfs:domain imf:AspectObject ;
    rdfs:range imf:IntegratedObject ;
    skos:definition """

    Relates an aspect object to the integrated object the aspect
    object provides a specification for/description of.""" ;
    skos:prefLabel "is aspect of" .

<http://ns.imfid.org/imf-top>
    a owl:Ontology ;
    owl:imports <http://www.w3.org/2004/02/skos/core> ;
    owl:versionIRI <http://ns.imfid.org/ontology/2022-01-31/imf-top> ;
    skos:altLabel "IMF top ontology" ;
    skos:prefLabel "Information Modelling Framework Ontology: Top Ontology " ;
    skos:scopeNote """

      This ontology defines the very core classes and relations of the
      Information Modelling Framework (IMF) that provide a structure
      for ontologies that extend this ontology.

    """ .

[]
    a owl:AllDisjointClasses ;
    owl:members (imf:Aspect
        imf:AspectObject
        imf:IntegratedObject
    ) .

